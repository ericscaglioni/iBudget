// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum AccountType {
  cash
  card
  checking
  savings
  investment
  wallet
  other
}

model Account {
  id             String      @id @default(cuid())
  userId         String
  name           String
  type           AccountType
  currency       String
  initialBalance Decimal     @db.Decimal(10, 2)
  createdAt      DateTime    @default(now())
  updatedAt      DateTime    @updatedAt

  transactions   Transaction[]
  @@map("accounts")
}

enum CategoryType {
  income
  expense
}

model Category {
  id           String       @id @default(cuid())
  userId       String?      // null = default category
  name         String
  color        String       // hex color
  type         CategoryType @default(expense)
  createdAt    DateTime     @default(now())
  updatedAt    DateTime     @updatedAt

  transactions Transaction[]

  @@map("categories")
}

enum TransactionType {
  income
  expense
}

model Transaction {
  id          String    @id @default(cuid())
  userId      String
  accountId   String
  categoryId  String?   // nullable for transfers/incomes
  type        TransactionType
  amount      Decimal   @db.Decimal(10, 2)
  description String
  date        DateTime
  transferId  String?   // used to link both sides of a transfer
  isRecurring Boolean?  @default(false)
  frequency   String?
  endsAt      DateTime?
  recurringId String?   // used to link recurring occurrences
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt

  account     Account   @relation(fields: [accountId], references: [id])
  category    Category? @relation(fields: [categoryId], references: [id])

  @@map("transactions")
}

